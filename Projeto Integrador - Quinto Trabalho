Projeto Integrador - Programação Aplicada ao Direito - Quinto Trabalho - Algoritimos 

Aluna: Ana Carolina Brunetto Silva

Matrícula: 2021 0418 2597


1- implemente o algoritmo de ordenação Bubble Sort usando python =

          Segundo a pesquisa realizada, é de grande magnitude salientar que o algoritmo de ordenação Bubble Sort é um método 
de ordenação simples e intuitivo.Nessa perspectiva, funciona comparando cada elemento da lista com o elemento adjacente e trocando-os 
se estiverem na ordem errada. Esse processo é repetido várias vezes até que toda a lista esteja ordenada.

          Nesse sentido, o primeiro passo para realizar processo do algoritmo de ordenação Bubble Sort é a comparação de elementos adjacentes. 
Em outras palavras,o algoritmo começa comparando o primeiro elemento da lista com o segundo, depois o segundo com o terceiro, e assim por diante, 
até o penúltimo com o último elemento.

          Em seguida, pode se realizar a troca de elementos, caso seja necessário. Dessa forma, se o elemento atual for maior (ou menor, 
dependendo da ordem desejada) que o próximo elemento, eles são trocados de lugar. Isso garante que os elementos maiores (ou menores) 
"subam" para suas posições corretas.

          Outrossim, depois desse passo dito anteriormente, há também a iteração. Esta por sua vez, ocorre após a primeira passagem, 
ou seja, o maior (ou menor) elemento estará na posição correta. Assim, o processo é então repetido para os elementos restantes, 
excluindo o último elemento que já está na posição correta. Isso é feito repetidamente até que nenhum swap seja necessário durante 
uma passagem completa, o que indica que a lista está ordenada.

          Por fim, o último passo do processo, é a complexidade de tempo. Em outros termos, a complexidade de tempo do Bubble Sort é O(n^2) 
no pior caso, onde n é o número de elementos na lista. Isso ocorre porque, em cada passagem, o algoritmo faz comparações entre todos os pares 
de elementos, resultando em um número total de comparações proporcional a n^2.

          Destarte, conclui-se que embora o Bubble Sort seja fácil de entender e implementar, ele não é eficiente para grandes 
conjuntos de dados devido à sua complexidade de tempo quadrática. No entanto, para conjuntos de dados pequenos ou quase ordenados, 
pode ser uma escolha razoável.

          Segue o algoritmo de ordenação Bubble Sort usando python:

https://github.com/anabrunetto/brunetto/blob/main/Python%20-%20Algaritmo%20de%20repeticao%20bubble%20sort.PNG


2 - implemente um algorítmo que imprima apenas as vogais de uma determinada palavra ou frase =

          Primeiramente, há de se falar que um algoritmo é uma sequência finita e não ambígua de instruções ou regras bem definidas para resolver 
um problema ou realizar uma tarefa específica. Desse modo, ele toma uma entrada, executa uma série de passos e produz uma saída desejada. Portanto, 
pode-se criar um algoritmo em Python que percorre cada caractere da palavra ou frase e verifica se é uma vogal.

          Segue um algoritmo simples em Python que imprime apenas as vogais de uma palavra ou frase:

https://github.com/anabrunetto/brunetto/blob/main/Algoritmo%20de%20uma%20palavra%20ou%20frase.PNG

          Como visto na implementação acima, este algoritmo percorre cada caractere da entrada (frase) e verifica se ele é uma vogal, comparando-o com 
uma string contendo todas as vogais maiúsculas e minúsculas. Por conseguinte, se o caractere for uma vogal, ele é adicionado a uma nova string chamada 
vogais_encontradas. Logo, ao final, o algoritmo retorna a string contendo todas as vogais encontradas na frase.

          Essencialmente, o algoritmo é uma maneira sistemática de identificar e imprimir as vogais em uma palavra ou frase, seguindo uma 
série de passos definidos.

          À vista disso, a implementação de algoritmos é uma habilidade fundamental para qualquer indivíduo que esteja envolvida no desenvolvimento 
de software ou interessada em computação. Desta maneira, ela é de extrema importância não apenas para a construção de sistemas eficientes e robustos, 
mas também para o desenvolvimento de habilidades cognitivas e lógicas.






